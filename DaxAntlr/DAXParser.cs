//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/projects/getting-started-with-antlr-in-csharp-master/AntlrCSharp/DAX.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using System.Diagnostics;
using System.Collections.Generic;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class DAXParser : Parser {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		TABLE_EXPRESSION=1, COLUMNS=2, SINGLE_LINE_COMMENT=3, DELIMITED_COMMENT=4, 
		WHITESPACES=5, ABS=6, ACOS=7, ACOSH=8, ACOT=9, ACOTH=10, ADDCOLUMNS=11, 
		ADDMISSINGITEMS=12, ALL=13, ALLCROSSFILTERED=14, ALLEXCEPT=15, ALLNOBLANKROW=16, 
		ALLSELECTED=17, AND=18, APPROXIMATEDISTINCTCOUNT=19, ASIN=20, ASINH=21, 
		ATAN=22, ATANH=23, AVERAGE=24, AVERAGEA=25, AVERAGEX=26, BETADIST=27, 
		BETAINV=28, BLANK=29, CALCULATE=30, CALCULATETABLE=31, CALENDAR=32, CALENDARAUTO=33, 
		CEILING=34, CHISQDIST=35, CHISQDISTRT=36, CHISQINV=37, CHISQINVRT=38, 
		CLOSINGBALANCEMONTH=39, CLOSINGBALANCEQUARTER=40, CLOSINGBALANCEYEAR=41, 
		COALESCE=42, COMBIN=43, COMBINA=44, COMBINEVALUES=45, CONCATENATE=46, 
		CONCATENATEX=47, CONFIDENCENORM=48, CONFIDENCET=49, CONTAINS=50, CONTAINSROW=51, 
		CONTAINSSTRING=52, CONTAINSSTRINGEXACT=53, CONVERT=54, COS=55, COSH=56, 
		COT=57, COTH=58, COUNT=59, COUNTA=60, COUNTAX=61, COUNTBLANK=62, COUNTROWS=63, 
		COUNTX=64, CROSSFILTER=65, CROSSJOIN=66, CURRENCY=67, CURRENTGROUP=68, 
		CUSTOMDATA=69, DATATABLE=70, DATE=71, DATEADD=72, DATEDIFF=73, DATESBETWEEN=74, 
		DATESINPERIOD=75, DATESMTD=76, DATESQTD=77, DATESYTD=78, DATEVALUE=79, 
		DAY=80, DEGREES=81, DETAILROWS=82, DISTINCT=83, DISTINCTCOUNT=84, DISTINCTCOUNTNOBLANK=85, 
		DIVIDE=86, EARLIER=87, EARLIEST=88, EDATE=89, ENDOFMONTH=90, ENDOFQUARTER=91, 
		ENDOFYEAR=92, EOMONTH=93, ERROR=94, EVEN=95, EXACT=96, EXCEPT=97, EXP=98, 
		EXPONDIST=99, FACT=100, FALSE=101, FILTER=102, FILTERS=103, FIND=104, 
		FIRSTDATE=105, FIRSTNONBLANK=106, FIRSTNONBLANKVALUE=107, FIXED=108, FLOOR=109, 
		FORMAT=110, GCD=111, GENERATE=112, GENERATEALL=113, GENERATESERIES=114, 
		GEOMEAN=115, GEOMEANX=116, GROUPBY=117, HASONEFILTER=118, HASONEVALUE=119, 
		HOUR=120, IF=121, IFEAGER=122, IFERROR=123, IGNORE=124, INT=125, INTERSECT=126, 
		ISBLANK=127, ISCROSSFILTERED=128, ISEMPTY=129, ISERROR=130, ISEVEN=131, 
		ISFILTERED=132, ISINSCOPE=133, ISLOGICAL=134, ISNONTEXT=135, ISNUMBER=136, 
		ISOCEILING=137, ISODD=138, ISONORAFTER=139, ISSELECTEDMEASURE=140, ISSUBTOTAL=141, 
		ISTEXT=142, KEEPFILTERS=143, KEYWORDMATCH=144, LASTDATE=145, LASTNONBLANK=146, 
		LASTNONBLANKVALUE=147, LCM=148, LEFT=149, LEN=150, LN=151, LOG=152, LOG10=153, 
		LOOKUPVALUE=154, LOWER=155, MAX=156, MAXA=157, MAXX=158, MEDIAN=159, MEDIANX=160, 
		MID=161, MIN=162, MINA=163, MINUTE=164, MINX=165, MOD=166, MONTH=167, 
		MROUND=168, NATURALINNERJOIN=169, NATURALLEFTOUTERJOIN=170, NEXTDAY=171, 
		NEXTMONTH=172, NEXTQUARTER=173, NEXTYEAR=174, NONVISUAL=175, NORMDIST=176, 
		NORMINV=177, NORMSDIST=178, NORMSINV=179, NOT=180, NOW=181, ODD=182, OPENINGBALANCEMONTH=183, 
		OPENINGBALANCEQUARTER=184, OPENINGBALANCEYEAR=185, OR=186, PARALLELPERIOD=187, 
		PATH=188, PATHCONTAINS=189, PATHITEM=190, PATHITEMREVERSE=191, PATHLENGTH=192, 
		PERCENTILEEXC=193, PERCENTILEINC=194, PERCENTILEXEXC=195, PERCENTILEXINC=196, 
		PERMUT=197, PI=198, POISSONDIST=199, POWER=200, PREVIOUSDAY=201, PREVIOUSMONTH=202, 
		PREVIOUSQUARTER=203, PREVIOUSYEAR=204, PRODUCT=205, PRODUCTX=206, QUARTER=207, 
		QUOTIENT=208, RADIANS=209, RAND=210, RANDBETWEEN=211, RANKEQ=212, RANKX=213, 
		RELATED=214, RELATEDTABLE=215, REMOVEFILTERS=216, REPLACE=217, REPT=218, 
		RIGHT=219, ROLLUP=220, ROLLUPADDISSUBTOTAL=221, ROLLUPGROUP=222, ROLLUPISSUBTOTAL=223, 
		ROUND=224, ROUNDDOWN=225, ROUNDUP=226, ROW=227, SAMEPERIODLASTYEAR=228, 
		SAMPLE=229, SEARCH=230, SECOND=231, SELECTCOLUMNS=232, SELECTEDMEASURE=233, 
		SELECTEDMEASUREFORMATSTRING=234, SELECTEDMEASURENAME=235, SELECTEDVALUE=236, 
		SIGN=237, SIN=238, SINH=239, SQRT=240, SQRTPI=241, STARTOFMONTH=242, STARTOFQUARTER=243, 
		STARTOFYEAR=244, STDEVP=245, STDEVS=246, STDEVXP=247, STDEVXS=248, SUBSTITUTE=249, 
		SUBSTITUTEWITHINDEX=250, SUM=251, SUMMARIZE=252, SUMMARIZECOLUMNS=253, 
		SUMX=254, SWITCH=255, TDIST=256, TDIST2T=257, TDISTRT=258, TINV=259, TINV2T=260, 
		TAN=261, TANH=262, TIME=263, TIMEVALUE=264, TODAY=265, TOPN=266, TOPNPERLEVEL=267, 
		TOPNSKIP=268, TOTALMTD=269, TOTALQTD=270, TOTALYTD=271, TREATAS=272, TRIM=273, 
		TRUE=274, TRUNC=275, UNICHAR=276, UNICODE=277, UNION=278, UPPER=279, USERELATIONSHIP=280, 
		USERNAME=281, USEROBJECTID=282, USERPRINCIPALNAME=283, UTCNOW=284, UTCTODAY=285, 
		VALUE=286, VALUES=287, VARP=288, VARS=289, VARXP=290, VARXS=291, WEEKDAY=292, 
		YEARFRAC=293, WEEKNUM=294, XIRR=295, XNPV=296, YEAR=297, ACCRINT=298, 
		ACCRINTM=299, AMORDEGRC=300, AMORLINC=301, COUPDAYBS=302, COUPDAYS=303, 
		COUPDAYSNC=304, COUPNCD=305, COUPNUM=306, COUPPCD=307, CUMIPMT=308, CUMPRINC=309, 
		DB=310, DDB=311, DISC=312, DOLLARDE=313, DOLLARFR=314, DURATION=315, EFFECT=316, 
		FV=317, INTRATE=318, IPMT=319, ISPMT=320, MDURATION=321, NOMINAL=322, 
		NPER=323, ODDFPRICE=324, ODDFYIELD=325, ODDLPRICE=326, ODDLYIELD=327, 
		PDURATION=328, PMT=329, PPMT=330, PRICE=331, PRICEDISC=332, PRICEMAT=333, 
		PV=334, RATE=335, RECEIVED=336, RRI=337, SLN=338, SYD=339, TBILLEQ=340, 
		TBILLPRICE=341, TBILLYIELD=342, VDB=343, YIELD=344, YIELDDISC=345, YIELDMAT=346, 
		SAMPLEAXISWITHLOCALMINMAX=347, EVALUATEANDLOG=348, OFFSET=349, INDEX=350, 
		WINDOW=351, ORDERBY=352, RANK=353, ROWNUMBER=354, PARTITIONBY=355, EXTERNALMEASURE=356, 
		KMEANSCLUSTERING=357, DEFINE=358, EVALUATE=359, ORDER=360, BY=361, START=362, 
		AT=363, RETURN=364, VAR=365, IN=366, ASC=367, DESC=368, SKIP_=369, DENSE=370, 
		BLANKS=371, LAST=372, FIRST=373, WEEK=374, BOTH=375, NONE=376, ONEWAY=377, 
		ONEWAYRIGHTFILTERSLEFT=378, ONEWAYLEFTFILTERSRIGHT=379, INTEGER=380, DOUBLE=381, 
		STRING=382, BOOLEAN=383, DATETIME=384, VARIANT=385, TEXT=386, ALPHABETICAL=387, 
		KEEP=388, REL=389, DATE_LITERAL=390, INTEGER_LITERAL=391, REAL_LITERAL=392, 
		STRING_LITERAL=393, TABLE=394, COLUMN_OR_MEASURE=395, TABLE_OR_VARIABLE=396, 
		OPEN_CURLY=397, CLOSE_CURLY=398, OPEN_PARENS=399, CLOSE_PARENS=400, COMMA=401, 
		PLUS=402, MINUS=403, STAR=404, DIV=405, CARET=406, AMP=407, ASSIGNMENT=408, 
		LT=409, GT=410, OP_AND=411, OP_OR=412, OP_NE=413, OP_LE=414, OP_GE=415;
	public const int
		RULE_line = 0;
	public static readonly string[] ruleNames = {
		"line"
	};

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'ABS'", "'ACOS'", "'ACOSH'", "'ACOT'", 
		"'ACOTH'", "'ADDCOLUMNS'", "'ADDMISSINGITEMS'", "'ALL'", "'ALLCROSSFILTERED'", 
		"'ALLEXCEPT'", "'ALLNOBLANKROW'", "'ALLSELECTED'", "'AND'", "'APPROXIMATEDISTINCTCOUNT'", 
		"'ASIN'", "'ASINH'", "'ATAN'", "'ATANH'", "'AVERAGE'", "'AVERAGEA'", "'AVERAGEX'", 
		"'BETA.DIST'", "'BETA.INV'", "'BLANK'", "'CALCULATE'", "'CALCULATETABLE'", 
		"'CALENDAR'", "'CALENDARAUTO'", "'CEILING'", "'CHISQ.DIST'", "'CHISQ.DIST.RT'", 
		"'CHISQ.INV'", "'CHISQ.INV.RT'", "'CLOSINGBALANCEMONTH'", "'CLOSINGBALANCEQUARTER'", 
		"'CLOSINGBALANCEYEAR'", "'COALESCE'", "'COMBIN'", "'COMBINA'", "'COMBINEVALUES'", 
		"'CONCATENATE'", "'CONCATENATEX'", "'CONFIDENCE.NORM'", "'CONFIDENCE.T'", 
		"'CONTAINS'", "'CONTAINSROW'", "'CONTAINSSTRING'", "'CONTAINSSTRINGEXACT'", 
		"'CONVERT'", "'COS'", "'COSH'", "'COT'", "'COTH'", "'COUNT'", "'COUNTA'", 
		"'COUNTAX'", "'COUNTBLANK'", "'COUNTROWS'", "'COUNTX'", "'CROSSFILTER'", 
		"'CROSSJOIN'", "'CURRENCY'", "'CURRENTGROUP'", "'CUSTOMDATA'", "'DATATABLE'", 
		"'DATE'", "'DATEADD'", "'DATEDIFF'", "'DATESBETWEEN'", "'DATESINPERIOD'", 
		"'DATESMTD'", "'DATESQTD'", "'DATESYTD'", "'DATEVALUE'", "'DAY'", "'DEGREES'", 
		"'DETAILROWS'", "'DISTINCT'", "'DISTINCTCOUNT'", "'DISTINCTCOUNTNOBLANK'", 
		"'DIVIDE'", "'EARLIER'", "'EARLIEST'", "'EDATE'", "'ENDOFMONTH'", "'ENDOFQUARTER'", 
		"'ENDOFYEAR'", "'EOMONTH'", "'ERROR'", "'EVEN'", "'EXACT'", "'EXCEPT'", 
		"'EXP'", "'EXPON.DIST'", "'FACT'", "'FALSE'", "'FILTER'", "'FILTERS'", 
		"'FIND'", "'FIRSTDATE'", "'FIRSTNONBLANK'", "'FIRSTNONBLANKVALUE'", "'FIXED'", 
		"'FLOOR'", "'FORMAT'", "'GCD'", "'GENERATE'", "'GENERATEALL'", "'GENERATESERIES'", 
		"'GEOMEAN'", "'GEOMEANX'", "'GROUPBY'", "'HASONEFILTER'", "'HASONEVALUE'", 
		"'HOUR'", "'IF'", "'IF.EAGER'", "'IFERROR'", "'IGNORE'", "'INT'", "'INTERSECT'", 
		"'ISBLANK'", "'ISCROSSFILTERED'", "'ISEMPTY'", "'ISERROR'", "'ISEVEN'", 
		"'ISFILTERED'", "'ISINSCOPE'", "'ISLOGICAL'", "'ISNONTEXT'", "'ISNUMBER'", 
		"'ISO.CEILING'", "'ISODD'", "'ISONORAFTER'", "'ISSELECTEDMEASURE'", "'ISSUBTOTAL'", 
		"'ISTEXT'", "'KEEPFILTERS'", "'KEYWORDMATCH'", "'LASTDATE'", "'LASTNONBLANK'", 
		"'LASTNONBLANKVALUE'", "'LCM'", "'LEFT'", "'LEN'", "'LN'", "'LOG'", "'LOG10'", 
		"'LOOKUPVALUE'", "'LOWER'", "'MAX'", "'MAXA'", "'MAXX'", "'MEDIAN'", "'MEDIANX'", 
		"'MID'", "'MIN'", "'MINA'", "'MINUTE'", "'MINX'", "'MOD'", "'MONTH'", 
		"'MROUND'", "'NATURALINNERJOIN'", "'NATURALLEFTOUTERJOIN'", "'NEXTDAY'", 
		"'NEXTMONTH'", "'NEXTQUARTER'", "'NEXTYEAR'", "'NONVISUAL'", "'NORM.DIST'", 
		"'NORM.INV'", "'NORM.S.DIST'", "'NORM.S.INV'", "'NOT'", "'NOW'", "'ODD'", 
		"'OPENINGBALANCEMONTH'", "'OPENINGBALANCEQUARTER'", "'OPENINGBALANCEYEAR'", 
		"'OR'", "'PARALLELPERIOD'", "'PATH'", "'PATHCONTAINS'", "'PATHITEM'", 
		"'PATHITEMREVERSE'", "'PATHLENGTH'", "'PERCENTILE.EXC'", "'PERCENTILE.INC'", 
		"'PERCENTILEX.EXC'", "'PERCENTILEX.INC'", "'PERMUT'", "'PI'", "'POISSON.DIST'", 
		"'POWER'", "'PREVIOUSDAY'", "'PREVIOUSMONTH'", "'PREVIOUSQUARTER'", "'PREVIOUSYEAR'", 
		"'PRODUCT'", "'PRODUCTX'", "'QUARTER'", "'QUOTIENT'", "'RADIANS'", "'RAND'", 
		"'RANDBETWEEN'", "'RANK.EQ'", "'RANKX'", "'RELATED'", "'RELATEDTABLE'", 
		"'REMOVEFILTERS'", "'REPLACE'", "'REPT'", "'RIGHT'", "'ROLLUP'", "'ROLLUPADDISSUBTOTAL'", 
		"'ROLLUPGROUP'", "'ROLLUPISSUBTOTAL'", "'ROUND'", "'ROUNDDOWN'", "'ROUNDUP'", 
		"'ROW'", "'SAMEPERIODLASTYEAR'", "'SAMPLE'", "'SEARCH'", "'SECOND'", "'SELECTCOLUMNS'", 
		"'SELECTEDMEASURE'", "'SELECTEDMEASUREFORMATSTRING'", "'SELECTEDMEASURENAME'", 
		"'SELECTEDVALUE'", "'SIGN'", "'SIN'", "'SINH'", "'SQRT'", "'SQRTPI'", 
		"'STARTOFMONTH'", "'STARTOFQUARTER'", "'STARTOFYEAR'", "'STDEV.P'", "'STDEV.S'", 
		"'STDEVX.P'", "'STDEVX.S'", "'SUBSTITUTE'", "'SUBSTITUTEWITHINDEX'", "'SUM'", 
		"'SUMMARIZE'", "'SUMMARIZECOLUMNS'", "'SUMX'", "'SWITCH'", "'T.DIST'", 
		"'T.DIST.2T'", "'T.DIST.RT'", "'T.INV'", "'T.INV.2T'", "'TAN'", "'TANH'", 
		"'TIME'", "'TIMEVALUE'", "'TODAY'", "'TOPN'", "'TOPNPERLEVEL'", "'TOPNSKIP'", 
		"'TOTALMTD'", "'TOTALQTD'", "'TOTALYTD'", "'TREATAS'", "'TRIM'", "'TRUE'", 
		"'TRUNC'", "'UNICHAR'", "'UNICODE'", "'UNION'", "'UPPER'", "'USERELATIONSHIP'", 
		"'USERNAME'", "'USEROBJECTID'", "'USERPRINCIPALNAME'", "'UTCNOW'", "'UTCTODAY'", 
		"'VALUE'", "'VALUES'", "'VAR.P'", "'VAR.S'", "'VARX.P'", "'VARX.S'", "'WEEKDAY'", 
		"'YEARFRAC'", "'WEEKNUM'", "'XIRR'", "'XNPV'", "'YEAR'", "'ACCRINT'", 
		"'ACCRINTM'", "'AMORDEGRC'", "'AMORLINC'", "'COUPDAYBS'", "'COUPDAYS'", 
		"'COUPDAYSNC'", "'COUPNCD'", "'COUPNUM'", "'COUPPCD'", "'CUMIPMT'", "'CUMPRINC'", 
		"'DB'", "'DDB'", "'DISC'", "'DOLLARDE'", "'DOLLARFR'", "'DURATION'", "'EFFECT'", 
		"'FV'", "'INTRATE'", "'IPMT'", "'ISPMT'", "'MDURATION'", "'NOMINAL'", 
		"'NPER'", "'ODDFPRICE'", "'ODDFYIELD'", "'ODDLPRICE'", "'ODDLYIELD'", 
		"'PDURATION'", "'PMT'", "'PPMT'", "'PRICE'", "'PRICEDISC'", "'PRICEMAT'", 
		"'PV'", "'RATE'", "'RECEIVED'", "'RRI'", "'SLN'", "'SYD'", "'TBILLEQ'", 
		"'TBILLPRICE'", "'TBILLYIELD'", "'VDB'", "'YIELD'", "'YIELDDISC'", "'YIELDMAT'", 
		"'SAMPLEAXISWITHLOCALMINMAX'", "'EVALUATEANDLOG'", "'OFFSET'", "'INDEX'", 
		"'WINDOW'", "'ORDERBY'", "'RANK'", "'ROWNUMBER'", "'PARTITIONBY'", "'EXTERNALMEASURE'", 
		"'KMEANSCLUSTERING'", "'DEFINE'", "'EVALUATE'", "'ORDER'", "'BY'", "'START'", 
		"'AT'", "'RETURN'", "'VAR'", "'IN'", "'ASC'", "'DESC'", "'SKIP'", "'DENSE'", 
		"'BLANKS'", "'LAST'", "'FIRST'", "'WEEK'", "'BOTH'", "'NONE'", "'ONEWAY'", 
		"'ONEWAY_RIGHTFILTERSLEFT'", "'ONEWAY_LEFTFILTERSRIGHT'", "'INTEGER'", 
		"'DOUBLE'", "'STRING'", "'BOOLEAN'", "'DATETIME'", "'VARIANT'", "'TEXT'", 
		"'ALPHABETICAL'", "'KEEP'", "'REL'", null, null, null, null, null, null, 
		null, "'{'", "'}'", "'('", "')'", "','", "'+'", "'-'", "'*'", "'/'", "'^'", 
		"'&'", "'='", "'<'", "'>'", "'&&'", "'||'", "'<>'", "'<='", "'>='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TABLE_EXPRESSION", "COLUMNS", "SINGLE_LINE_COMMENT", "DELIMITED_COMMENT", 
		"WHITESPACES", "ABS", "ACOS", "ACOSH", "ACOT", "ACOTH", "ADDCOLUMNS", 
		"ADDMISSINGITEMS", "ALL", "ALLCROSSFILTERED", "ALLEXCEPT", "ALLNOBLANKROW", 
		"ALLSELECTED", "AND", "APPROXIMATEDISTINCTCOUNT", "ASIN", "ASINH", "ATAN", 
		"ATANH", "AVERAGE", "AVERAGEA", "AVERAGEX", "BETADIST", "BETAINV", "BLANK", 
		"CALCULATE", "CALCULATETABLE", "CALENDAR", "CALENDARAUTO", "CEILING", 
		"CHISQDIST", "CHISQDISTRT", "CHISQINV", "CHISQINVRT", "CLOSINGBALANCEMONTH", 
		"CLOSINGBALANCEQUARTER", "CLOSINGBALANCEYEAR", "COALESCE", "COMBIN", "COMBINA", 
		"COMBINEVALUES", "CONCATENATE", "CONCATENATEX", "CONFIDENCENORM", "CONFIDENCET", 
		"CONTAINS", "CONTAINSROW", "CONTAINSSTRING", "CONTAINSSTRINGEXACT", "CONVERT", 
		"COS", "COSH", "COT", "COTH", "COUNT", "COUNTA", "COUNTAX", "COUNTBLANK", 
		"COUNTROWS", "COUNTX", "CROSSFILTER", "CROSSJOIN", "CURRENCY", "CURRENTGROUP", 
		"CUSTOMDATA", "DATATABLE", "DATE", "DATEADD", "DATEDIFF", "DATESBETWEEN", 
		"DATESINPERIOD", "DATESMTD", "DATESQTD", "DATESYTD", "DATEVALUE", "DAY", 
		"DEGREES", "DETAILROWS", "DISTINCT", "DISTINCTCOUNT", "DISTINCTCOUNTNOBLANK", 
		"DIVIDE", "EARLIER", "EARLIEST", "EDATE", "ENDOFMONTH", "ENDOFQUARTER", 
		"ENDOFYEAR", "EOMONTH", "ERROR", "EVEN", "EXACT", "EXCEPT", "EXP", "EXPONDIST", 
		"FACT", "FALSE", "FILTER", "FILTERS", "FIND", "FIRSTDATE", "FIRSTNONBLANK", 
		"FIRSTNONBLANKVALUE", "FIXED", "FLOOR", "FORMAT", "GCD", "GENERATE", "GENERATEALL", 
		"GENERATESERIES", "GEOMEAN", "GEOMEANX", "GROUPBY", "HASONEFILTER", "HASONEVALUE", 
		"HOUR", "IF", "IFEAGER", "IFERROR", "IGNORE", "INT", "INTERSECT", "ISBLANK", 
		"ISCROSSFILTERED", "ISEMPTY", "ISERROR", "ISEVEN", "ISFILTERED", "ISINSCOPE", 
		"ISLOGICAL", "ISNONTEXT", "ISNUMBER", "ISOCEILING", "ISODD", "ISONORAFTER", 
		"ISSELECTEDMEASURE", "ISSUBTOTAL", "ISTEXT", "KEEPFILTERS", "KEYWORDMATCH", 
		"LASTDATE", "LASTNONBLANK", "LASTNONBLANKVALUE", "LCM", "LEFT", "LEN", 
		"LN", "LOG", "LOG10", "LOOKUPVALUE", "LOWER", "MAX", "MAXA", "MAXX", "MEDIAN", 
		"MEDIANX", "MID", "MIN", "MINA", "MINUTE", "MINX", "MOD", "MONTH", "MROUND", 
		"NATURALINNERJOIN", "NATURALLEFTOUTERJOIN", "NEXTDAY", "NEXTMONTH", "NEXTQUARTER", 
		"NEXTYEAR", "NONVISUAL", "NORMDIST", "NORMINV", "NORMSDIST", "NORMSINV", 
		"NOT", "NOW", "ODD", "OPENINGBALANCEMONTH", "OPENINGBALANCEQUARTER", "OPENINGBALANCEYEAR", 
		"OR", "PARALLELPERIOD", "PATH", "PATHCONTAINS", "PATHITEM", "PATHITEMREVERSE", 
		"PATHLENGTH", "PERCENTILEEXC", "PERCENTILEINC", "PERCENTILEXEXC", "PERCENTILEXINC", 
		"PERMUT", "PI", "POISSONDIST", "POWER", "PREVIOUSDAY", "PREVIOUSMONTH", 
		"PREVIOUSQUARTER", "PREVIOUSYEAR", "PRODUCT", "PRODUCTX", "QUARTER", "QUOTIENT", 
		"RADIANS", "RAND", "RANDBETWEEN", "RANKEQ", "RANKX", "RELATED", "RELATEDTABLE", 
		"REMOVEFILTERS", "REPLACE", "REPT", "RIGHT", "ROLLUP", "ROLLUPADDISSUBTOTAL", 
		"ROLLUPGROUP", "ROLLUPISSUBTOTAL", "ROUND", "ROUNDDOWN", "ROUNDUP", "ROW", 
		"SAMEPERIODLASTYEAR", "SAMPLE", "SEARCH", "SECOND", "SELECTCOLUMNS", "SELECTEDMEASURE", 
		"SELECTEDMEASUREFORMATSTRING", "SELECTEDMEASURENAME", "SELECTEDVALUE", 
		"SIGN", "SIN", "SINH", "SQRT", "SQRTPI", "STARTOFMONTH", "STARTOFQUARTER", 
		"STARTOFYEAR", "STDEVP", "STDEVS", "STDEVXP", "STDEVXS", "SUBSTITUTE", 
		"SUBSTITUTEWITHINDEX", "SUM", "SUMMARIZE", "SUMMARIZECOLUMNS", "SUMX", 
		"SWITCH", "TDIST", "TDIST2T", "TDISTRT", "TINV", "TINV2T", "TAN", "TANH", 
		"TIME", "TIMEVALUE", "TODAY", "TOPN", "TOPNPERLEVEL", "TOPNSKIP", "TOTALMTD", 
		"TOTALQTD", "TOTALYTD", "TREATAS", "TRIM", "TRUE", "TRUNC", "UNICHAR", 
		"UNICODE", "UNION", "UPPER", "USERELATIONSHIP", "USERNAME", "USEROBJECTID", 
		"USERPRINCIPALNAME", "UTCNOW", "UTCTODAY", "VALUE", "VALUES", "VARP", 
		"VARS", "VARXP", "VARXS", "WEEKDAY", "YEARFRAC", "WEEKNUM", "XIRR", "XNPV", 
		"YEAR", "ACCRINT", "ACCRINTM", "AMORDEGRC", "AMORLINC", "COUPDAYBS", "COUPDAYS", 
		"COUPDAYSNC", "COUPNCD", "COUPNUM", "COUPPCD", "CUMIPMT", "CUMPRINC", 
		"DB", "DDB", "DISC", "DOLLARDE", "DOLLARFR", "DURATION", "EFFECT", "FV", 
		"INTRATE", "IPMT", "ISPMT", "MDURATION", "NOMINAL", "NPER", "ODDFPRICE", 
		"ODDFYIELD", "ODDLPRICE", "ODDLYIELD", "PDURATION", "PMT", "PPMT", "PRICE", 
		"PRICEDISC", "PRICEMAT", "PV", "RATE", "RECEIVED", "RRI", "SLN", "SYD", 
		"TBILLEQ", "TBILLPRICE", "TBILLYIELD", "VDB", "YIELD", "YIELDDISC", "YIELDMAT", 
		"SAMPLEAXISWITHLOCALMINMAX", "EVALUATEANDLOG", "OFFSET", "INDEX", "WINDOW", 
		"ORDERBY", "RANK", "ROWNUMBER", "PARTITIONBY", "EXTERNALMEASURE", "KMEANSCLUSTERING", 
		"DEFINE", "EVALUATE", "ORDER", "BY", "START", "AT", "RETURN", "VAR", "IN", 
		"ASC", "DESC", "SKIP_", "DENSE", "BLANKS", "LAST", "FIRST", "WEEK", "BOTH", 
		"NONE", "ONEWAY", "ONEWAYRIGHTFILTERSLEFT", "ONEWAYLEFTFILTERSRIGHT", 
		"INTEGER", "DOUBLE", "STRING", "BOOLEAN", "DATETIME", "VARIANT", "TEXT", 
		"ALPHABETICAL", "KEEP", "REL", "DATE_LITERAL", "INTEGER_LITERAL", "REAL_LITERAL", 
		"STRING_LITERAL", "TABLE", "COLUMN_OR_MEASURE", "TABLE_OR_VARIABLE", "OPEN_CURLY", 
		"CLOSE_CURLY", "OPEN_PARENS", "CLOSE_PARENS", "COMMA", "PLUS", "MINUS", 
		"STAR", "DIV", "CARET", "AMP", "ASSIGNMENT", "LT", "GT", "OP_AND", "OP_OR", 
		"OP_NE", "OP_LE", "OP_GE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DAX.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static DAXParser() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}

		public DAXParser(ITokenStream input) : this(input, Console.Out, Console.Error) { }

		public DAXParser(ITokenStream input, TextWriter output, TextWriter errorOutput)
		: base(input, output, errorOutput)
	{
		Interpreter = new ParserATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	public partial class LineContext : ParserRuleContext {
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode Eof() { return GetToken(DAXParser.Eof, 0); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode[] TABLE_EXPRESSION() { return GetTokens(DAXParser.TABLE_EXPRESSION); }
		[System.Diagnostics.DebuggerNonUserCode] public ITerminalNode TABLE_EXPRESSION(int i) {
			return GetToken(DAXParser.TABLE_EXPRESSION, i);
		}
		public LineContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_line; } }
		[System.Diagnostics.DebuggerNonUserCode]
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IDAXVisitor<TResult> typedVisitor = visitor as IDAXVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitLine(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public LineContext line() {
		LineContext _localctx = new LineContext(Context, State);
		EnterRule(_localctx, 0, RULE_line);
		int _la;
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 5;
			ErrorHandler.Sync(this);
			_la = TokenStream.LA(1);
			while (_la==TABLE_EXPRESSION) {
				{
				{
				State = 2;
				Match(TABLE_EXPRESSION);
				}
				}
				State = 7;
				ErrorHandler.Sync(this);
				_la = TokenStream.LA(1);
			}
			State = 8;
			Match(Eof);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			ErrorHandler.ReportError(this, re);
			ErrorHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	private static int[] _serializedATN = {
		4,1,415,11,2,0,7,0,1,0,5,0,4,8,0,10,0,12,0,7,9,0,1,0,1,0,1,0,0,0,1,0,0,
		0,10,0,5,1,0,0,0,2,4,5,1,0,0,3,2,1,0,0,0,4,7,1,0,0,0,5,3,1,0,0,0,5,6,1,
		0,0,0,6,8,1,0,0,0,7,5,1,0,0,0,8,9,5,0,0,1,9,1,1,0,0,0,1,5
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
